# -*- coding: utf-8 -*-
"""ML-Class: Decision-Tree Classifier Kaggle NoteBook

Automatically generated by Colaboratory.

Original file is located at
    https://www.kaggle.com/code/sateeshambesangenitk/ml-class-decision-tree-classifier/
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib

from sklearn.tree import DecisionTreeClassifier

#Loading up the Classification model we created
model = DecisionTreeClassifier(criterion='entropy', max_depth=10, min_samples_leaf=5,random_state=0)
model = joblib.load('finalized_model.joblib')
#Caching the model for faster loading
@st.cache

# Define the prediction function
def predict(Buying, Maint,  Doors, Persons, Lug_boot, Safety):
    if Safety == 'med':
        safety = 1
    elif Safety == 'high':
        safety = 2
    elif Safety == 'low':
        safety = 3
    df = pd.DataFrame([[Buying, Maint, Doors, Persons, Lug_boot, safety]], columns=['Buying', 'Maint',  'Doors','Persons', 'Lug_boot', 'Safety'])
    prediction = model.predict([[Buying, Maint, Doors, Persons, Lug_boot, safety]])
    return prediction

st.title('Car Evaluation Classification')
st.image("""https://images.livemint.com/img/2020/09/16/1600x900/carsales-koVB--621x414@LiveMint_1600277936612.jpg""")
st.header('Enter the Information of the Car:')
st.text("vhigh = 1 high = 2 med = 3 low = 4")
Buying = st.number_input('buying:', min_value=1, max_value=4, value=1)
st.text("vhigh = 1 high = 2 med = 3 low = 4")
Maint = st.number_input('maint:', min_value=1, max_value=4, value=1)
st.text("2-Doors = 1  3-Doors = 2 4-Doors = 3 5more = 4")
Doors = st.number_input('doors:', min_value=1, max_value=4, value=1)
st.text("2-persons = 1  4-persons = 2 more = 3 ")
Persons = st.number_input('persons:', min_value=1, max_value=3, value=1)
st.text("small = 1  med = 2 big = 3 ")
Lug_boot = st.number_input('lug_boot:', min_value=1, max_value=3, value=1)
Safety = st.radio('safety:', ('med', 'high', 'low'))

if st.button('Submit_Car_Infos'):
    cal_eval = predict(Buying, Maint, Doors, Persons, Lug_boot, Safety)
    if cal_eval[0] == 0:
        out = "Not That Good"
    elif cal_eval[0] == 1:
        out = "Good to Buy"
    elif cal_eval[0] == 2:
        out = "Bad to Buy"
    elif cal_eval[0] == 3:
        out = "Vary Good to Buy"
    st.success(f'The Evaluation of Car : {out}')
